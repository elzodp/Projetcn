        -:    0:Source:test_queens.c
        -:    0:Graph:test_queens.gcno
        -:    0:Data:test_queens.gcda
        -:    0:Runs:1
        -:    0:Programs:1
        -:    1:#include <stdint.h>
        -:    2:#include <setjmp.h>
        -:    3:#include <stdarg.h>
        -:    4:#include <stddef.h>
        -:    5:#include <cmocka.h>
        -:    6:
        -:    7:#include "queens.c"
        -:    8:
function test_same_diagonal called 1 returned 100% blocks executed 100%
        -:    9:static void test_same_diagonal(void **state) {
        -:   10:   //same diagonal
        1:   11:   assert_true(check_same_diagonal(1,1,2,2));
        1:   12:   assert_true(check_same_diagonal(3,1,1,3));
        1:   13:   assert_true(check_same_diagonal(3,0,0,3));
        -:   14:   //not same diagonal
        1:   15:   assert_false(check_same_diagonal(2,1,1,3));
        1:   16:   assert_false(check_same_diagonal(1,2,3,3));
        1:   17:   assert_false(check_same_diagonal(3,1,0,3));
        1:   18:}
        -:   19:
        -:   20:
function test_check_column_ok called 1 returned 100% blocks executed 100%
        -:   21:static void test_check_column_ok(void **state) {
        -:   22:    
        1:   23:    int q1[4] = {1,3,0,2};
        1:   24:    int q2[5] = {4,1,3,0,2};
        -:   25:
        1:   26:    assert_true(check_column_ok(4,4,q1));
        1:   27:    assert_true(check_column_ok(3,2,q1));
        1:   28:    assert_true(check_column_ok(3,0,q2));
        1:   29:    assert_true(check_column_ok(4,2,q2));
        -:   30:
        1:   31:    assert_false(check_column_ok(4,3,q1));
        1:   32:    assert_false(check_column_ok(3,1,q1));
        1:   33:    assert_false(check_column_ok(5,2,q2));
        1:   34:    assert_false(check_column_ok(5,1,q2));
        1:   35:}
        -:   36:
function test_find_available called 1 returned 100% blocks executed 100%
        -:   37:static void test_find_available(void **state) {
        1:   38:  bool t1[4] = {true, true, true, true};
        1:   39:  bool t2[4] = {false, false, false, false};
        1:   40:  bool t3[4] = {false, false, false, true};
        -:   41:  
        1:   42:  assert_true(find_available(3,4,t1));
        1:   43:  assert_true(find_available(0,4,t2) == -1);
        1:   44:  assert_true(find_available(1,4,t3));
        1:   45:}
        -:   46:
function test_find_solution called 1 returned 100% blocks executed 100%
        -:   47:static void test_find_solution(void**state){
        1:   48:    int q1[4] = {-1,-1,-1,-1};
        -:   49:
        1:   50:    assert_true(find_solution(4,q1));
        1:   51:    assert_true(find_solution(5,q1));
        1:   52:    assert_false(find_solution(3,q1));
        1:   53:    assert_false(find_solution(2,q1));
        -:   54:    
        -:   55:    
        -:   56:    
        1:   57:}
        -:   58:
function main called 1 returned 100% blocks executed 100%
        -:   59:int main(void) {
        1:   60:  int result = 0;
        1:   61:  const struct CMUnitTest tests[] = {
        -:   62:    
        -:   63:    cmocka_unit_test(test_same_diagonal),
        -:   64:    cmocka_unit_test(test_check_column_ok),
        -:   65:    cmocka_unit_test(test_find_available),
        -:   66:    cmocka_unit_test(test_find_solution),
        -:   67:      
        -:   68:  };
        -:   69:
        1:   70:  result |= cmocka_run_group_tests_name("queens", tests, NULL, NULL);
        -:   71:
        1:   72:  return result;
        -:   73:}
        -:   74:
        -:   75:
        -:   76:
